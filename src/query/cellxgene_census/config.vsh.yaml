functionality:
  name: cellxgene_census
  namespace: "query"
  description: |
    Query cells from a CellxGene Census or custom TileDBSoma object.
    Aside from fetching the cells' RNA counts (`.X`), cell metadata
    (`.obs`) and gene metadata (`.var`), this component also fetches
    the dataset metadata and joins it into the cell metadata.
  authors:
    - __merge__: /src/authors/matthias_beyens.yaml
      roles: [ maintainer, author ]
    - __merge__: /src/authors/dries_de_maeyer.yaml
      roles: [ author ]
    - __merge__: /src/authors/robrecht_cannoodt.yaml
      roles: [ author ]
    - __merge__: /src/authors/kai_waldrant.yaml
      roles: [ contributor ]
  argument_groups:
    - name: Input database
      description: "Open CellxGene Census by version or URI."
      arguments:
        # TODO: add user-provided release of census, e.g. TileDBSoma
        - name: "--input_uri"
          type: string
          description: "If specified, a URI containing the Census SOMA objects. If specified, will take precedence over the `--census_version` argument."
          required: false
          example: "s3://bucket/path"
        - name: "--census_version"
          description: "Which release of CellxGene census to use. Possible values are \"latest\", \"stable\", or the date of one of the releases (e.g. \"2023-07-25\"). For more information, check the documentation on [Census data releases](https://chanzuckerberg.github.io/cellxgene-census/cellxgene_census_docsite_data_release_info.html)."
          type: string
          example: "stable"
          required: false
    - name: Query
      description: Arguments related to the query.
      arguments:
        - name: "--species"
          type: string
          description: The organism to query, usually one of `Homo sapiens` or `Mus musculus`.
          required: false
          default: "homo_sapiens"
          multiple: false
        - name: "--cell_query"
          type: string
          description: "The query for selecting the cells as defined by the cellxgene census schema."
          required: false
          example: "is_primary_data == True and cell_type_ontology_term_id in ['CL:0000136', 'CL:1000311', 'CL:0002616'] and suspension_type == 'cell'"
        - name: "--cell_filter_grouping"
          type: string
          description: |
            A subset of 'obs' columns by which to group the cells for filtering.
            Only groups surpassing or equal to the `--cell_filter_minimum_count`
            threshold will be retained. Take care not to introduce a selection
            bias against cells with more fine-grained ontology annotations.
          required: false
          example: ["dataset_id", "tissue", "assay", "disease", "cell_type"]
          multiple: true
        - name: "--cell_filter_minimum_count"
          type: double
          description: |
            A minimum number of cells per group to retain. If `--cell_filter_grouping`
            is defined, this parameter should also be provided and vice versa.
          required: false
          example: 100
    - name: Outputs
      description: Output arguments.
      arguments:
        - name: "--output"
          type: file
          description: Output h5mu file.
          direction: output
          required: true
          example: output.h5mu
        - name: "--output_compression"
          type: string
          choices: ["gzip", "lzf"]
          required: false
          example: "gzip"
        - name: "--output_modality"
          description: "Which modality to store the output in."
          type: string
          default: "rna"
          required: false
  resources:
    - type: python_script
      path: script.py
    - path: /src/utils/setup_logger.py
  test_resources:
    - type: python_script
      path: test.py
platforms:
  - type: docker
    image: python:3.10
    setup:
      - type: python
        __merge__: [/src/base/requirements/anndata_mudata.yaml, .]
        packages:
          - cellxgene-census~=1.2.0
    test_setup:
      - type: python
        __merge__: [ /src/base/requirements/viashpy.yaml, .]

  - type: nextflow
    directives:
      label: [highmem, midcpu]