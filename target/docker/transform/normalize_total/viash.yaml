functionality:
  name: "normalize_total"
  namespace: "transform"
  version: "main_build"
  authors:
  - name: "Dries De Maeyer"
    email: "ddemaeyer@gmail.com"
    roles:
    - "maintainer"
    props:
      account: "ddemaey1"
  - name: "Robrecht Cannoodt"
    email: "robrecht@data-intuitive.com"
    roles:
    - "contributor"
    props:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  inputs: []
  outputs: []
  arguments:
  - type: "file"
    name: "--input"
    alternatives:
    - "-i"
    description: "Input h5mu file"
    example:
    - "input.h5mu"
    default: []
    must_exist: false
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--modality"
    alternatives: []
    example: []
    default:
    - "rna"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--input_layer"
    alternatives: []
    description: "Input layer to use. By default, X is normalized"
    example: []
    default: []
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives:
    - "-o"
    description: "Output h5mu file."
    example: []
    default:
    - "output.h5mu"
    must_exist: false
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--output_layer"
    alternatives: []
    description: "Output layer to use. By default, use X."
    example: []
    default: []
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--target_sum"
    alternatives: []
    description: "If None, after normalization, each observation (cell) has a total\
      \ count equal to the median of total counts for observations (cells) before\
      \ normalization."
    example: []
    default:
    - 10000
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "boolean_true"
    name: "--exclude_highly_expressed"
    alternatives: []
    description: "Exclude (very) highly expressed genes for the computation of the\
      \ normalization factor (size factor) for each cell. A gene is considered highly\
      \ expressed, if it has more than max_fraction of the total counts in at least\
      \ one cell. The not-excluded genes will sum up to target_sum."
    direction: "input"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Normalize counts per cell.\n\nNormalize each cell by total counts\
    \ over all genes, so that every cell has the same total count after normalization.\
    \ If choosing target_sum=1e6, this is CPM normalization.\n\nIf exclude_highly_expressed=True,\
    \ very highly expressed genes are excluded from the computation of the normalization\
    \ factor (size factor) for each cell. This is meaningful as these can strongly\
    \ influence the resulting normalized values for all other genes [Weinreb17].\n"
  test_resources:
  - type: "python_script"
    path: "run_test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/pbmc_1k_protein_v3"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms: []
info:
  config: "src/transform/normalize_total/config.vsh.yaml"
  platform: "docker"
  output: "target/docker/transform/normalize_total"
  executable: "target/docker/transform/normalize_total/normalize_total"
  viash_version: "0.6.3"
  git_commit: "f172aa7f282a94779cbae995c64187e347f26672"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
