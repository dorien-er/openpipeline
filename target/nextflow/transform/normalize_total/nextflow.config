  docker.enabled = true
  def viash_temp = System.getenv("VIASH_TEMP") ?: "/tmp/"
  docker.runOptions = "-i -v ${baseDir}:${baseDir} -v $viash_temp:$viash_temp"
  process.container = "dataintuitive/viash"
  params {
    normalize_total__input = "viash_no_value"
    normalize_total__modality = "rna"
    normalize_total__output = "viash_no_value"
    normalize_total__target_sum = "10000"
    normalize_total__exclude_highly_expressed = "no_default_value_configured"
    id = ""
    testScript = "run_test.py"
    testResources = [ "run_test.py", "../../../resources_test/pbmc_1k_protein_v3" ]
    normalize_total {
      name = "normalize_total"
      container = "transform_normalize_total"
      containerTag = "main_build"
      containerRegistry = "ghcr.io"
      containerOrganization = "openpipelines-bio"
      command = "normalize_total"
      tests {
        isDefined = true
        testScript = "run_test.py"
        testResources = [ "run_test.py", "../../../resources_test/pbmc_1k_protein_v3" ]
      }
      arguments {
        input {
          name = "input"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.normalize_total__input}"
          example = "input.h5mu"
          description = "Input h5mu file"
        }
        modality {
          name = "modality"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = true
          multiple_sep = ":"
          value = "${params.normalize_total__modality}"
          dflt = "rna"
        }
        output {
          name = "output"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.normalize_total__output}"
          dflt = "output.h5mu"
          description = "Output h5mu file."
        }
        target_sum {
          name = "target_sum"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.normalize_total__target_sum}"
          dflt = "10000"
          description = "If None, after normalization, each observation (cell) has a total count equal to the median of total counts for observations (cells) before normalization."
        }
        exclude_highly_expressed {
          name = "exclude_highly_expressed"
          otype = "--"
          required = false
          type = "boolean_true"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.normalize_total__exclude_highly_expressed}"
          description = "Exclude (very) highly expressed genes for the computation of the normalization factor (size factor) for each cell. A gene is considered highly expressed, if it has more than max_fraction of the total counts in at least one cell. The not-excluded genes will sum up to target_sum."
        }
      }
    }
  }