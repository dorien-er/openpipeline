  docker.enabled = true
  def viash_temp = System.getenv("VIASH_TEMP") ?: "/tmp/"
  docker.runOptions = "-i -v ${baseDir}:${baseDir} -v $viash_temp:$viash_temp"
  process.container = "dataintuitive/viash"
  params {
    umap__input = "viash_no_value"
    umap__output = "viash_no_value"
    umap__min_dist = "0.5"
    umap__alpha = "1.0"
    umap__gamma = "1.0"
    umap__random_seed = "0"
    umap__negative_sample_rate = "5"
    umap__init_pos = "spectral"
    id = ""
    testScript = "run_test.py"
    testResources = [ "run_test.py", "../../../resources_test/pbmc_1k_protein_v3" ]
    umap {
      name = "umap"
      container = "dimred_umap"
      containerTag = "0.3.0rc1"
      containerRegistry = "ghcr.io"
      containerOrganization = "openpipelines-bio"
      command = "umap"
      tests {
        isDefined = true
        testScript = "run_test.py"
        testResources = [ "run_test.py", "../../../resources_test/pbmc_1k_protein_v3" ]
      }
      arguments {
        input {
          name = "input"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.umap__input}"
          example = "input.h5mu"
          description = "Input h5mu file"
        }
        output {
          name = "output"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.umap__output}"
          example = "output.h5mu"
          description = "Output h5mu file."
        }
        min_dist {
          name = "min_dist"
          otype = "--"
          required = false
          type = "double"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.umap__min_dist}"
          dflt = "0.5"
          description = "The effective minimum distance between embedded points. Smaller values will result in a more clustered/clumped embedding where nearby points on the manifold are drawn closer together, while larger values will result on a more even dispersal of points. The value should be set relative to the spread value, which determines the scale at which embedded points will be spread out. The default of in the umap-learn package is 0.1."
        }
        alpha {
          name = "alpha"
          otype = "--"
          required = false
          type = "double"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.umap__alpha}"
          dflt = "1.0"
          description = "The initial learning rate for the embedding optimization."
        }
        gamma {
          name = "gamma"
          otype = "--"
          required = false
          type = "double"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.umap__gamma}"
          dflt = "1.0"
          description = "Weighting applied to negative samples in low dimensional embedding optimization. Values higher than one will result in greater weight being given to negative samples."
        }
        random_seed {
          name = "random_seed"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.umap__random_seed}"
          dflt = "0"
          description = "Random seed for Leiden algrithm."
        }
        negative_sample_rate {
          name = "negative_sample_rate"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.umap__negative_sample_rate}"
          dflt = "5"
          description = "The number of negative edge/1-simplex samples to use per positive edge/1-simplex sample in optimizing the low dimensional embedding."
        }
        init_pos {
          name = "init_pos"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.umap__init_pos}"
          dflt = "spectral"
          description = "How to initialize the low dimensional embedding. Called init in the original UMAP. Options are paga, spectral and random."
        }
      }
    }
  }