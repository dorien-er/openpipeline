{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "cellbender_remove_background",
    "description": "Eliminating technical artifacts from high-throughput single-cell RNA sequencing data.\n\nThis module removes counts due to ambient RNA molecules and random barcode swapping from (raw) UMI-based scRNA-seq count matrices. \nAt the moment, only the count matrices produced by the CellRanger count pipeline is supported. Support for additional tools and protocols \nwill be added in the future. A quick start tutorial can be found here.\n\n Fleming et al. 2022, bioRxiv.\n",
    "type": "object",
    "definitions": {
      "inputs" : {
        "title": "Inputs",
        "type": "object",
        "description": "No description",
        "default": "",
        "properties": {
          "input": {
            "type":"string",
            "description": "Input file.",
            
            
            "default": ""
          }
        }
      },
      "outputs" : {
        "title": "Outputs",
        "type": "object",
        "description": "No description",
        "default": "",
        "properties": {
          "output": {
            "type":"string",
            "description": "Full count matrix as an h5 file, with background RNA removed. This file contains all the original droplet barcodes.",
            
            
            "default": "$id.$key.output.h5"
          },
          "output_filtered": {
            "type":"string",
            "description": "Filtered count matrix as an h5 file, with background RNA removed. The word \"filtered\" means that this file contains only the droplets which were determined to have a \u003e 50% posterior probability of containing cells.",
            
            
            "default": "$id.$key.output_filtered.h5"
          },
          "output_report": {
            "type":"string",
            "description": "PDF file that provides a standard graphical summary of the inference procedure.",
            
            
            "default": "$id.$key.output_report.pdf"
          },
          "output_cell_barcodes": {
            "type":"string",
            "description": "CSV file containing all the droplet barcodes which were determined to have a \u003e 50% posterior probability of containing cells. Barcodes are written in plain text. This information is also contained in each of the above outputs, but is included as a separate output for convenient use in certain downstream applications.",
            
            
            "default": "$id.$key.output_cell_barcodes.csv"
          }
        }
      },
      "arguments" : {
        "title": "Arguments",
        "type": "object",
        "description": "No description",
        "default": "",
        "properties": {
          "model": {
            "type":"string",
            "description": "Which model is being used for count data. \u0027simple\u0027\ndoes not model either ambient RNA or random barcode\nswapping (for debugging purposes -- not recommended).\n\u0027ambient\u0027 assumes background RNA is incorporated into\ndroplets. \u0027swapping\u0027 assumes background RNA comes from\nrandom barcode swapping. \u0027full\u0027 uses a combined\nambient and swapping model. Defaults to \u0027full\u0027.\n",
            
            "enum": ["simple", "ambient", "swapping", "full"],
            "default": ""
          },
          "total_droplets_included": {
            "type":"integer",
            "description": "The number of droplets from the rank-ordered UMI plot\nthat will be analyzed. The largest \u0027total_droplets\u0027\ndroplets will have their cell probabilities inferred\nas an output.\n",
            
            
            "default": ""
          },
          "epochs": {
            "type":"integer",
            "description": "Number of epochs to train\n",
            
            
            "default": ""
          },
          "fpr": {
            "type":"number",
            "description": "Target false positive rate in (0, 1). A false positive\nis a true signal count that is erroneously removed.\nMore background removal is accompanied by more signal\nremoval at high values of FPR. You can specify\nmultiple values, which will create multiple output\nfiles.\n",
            
            
            "default": ""
          },
          "exclude_antibody_capture": {
            "type":"boolean",
            "description": "Including the flag --exclude-antibody-capture will\ncause remove-background to operate on gene counts\nonly, ignoring other features.\n",
            
            
            "default": "False"
          },
          "learning_rate": {
            "type":"number",
            "description": "Training detail: lower learning rate for inference. A\nOneCycle learning rate schedule is used, where the\nupper learning rate is ten times this value. (For this\nvalue, probably do not exceed 1e-3).\n",
            
            
            "default": ""
          },
          "cuda": {
            "type":"boolean",
            "description": "Including the flag --cuda will run the inference on a\nGPU.\n",
            
            
            "default": "False"
          }
        }
      },
      "nextflow input-output arguments" : {
        "title": "Nextflow input-output arguments",
        "type": "object",
        "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
        "default": "",
        "properties": {
          "publish_dir": {
            "type":"string",
            "description": "Path to an output directory.",
            
            
            "default": ""
          },
          "param_list": {
            "type":"string",
            "description": "Allows inputting multiple parameter sets to initialise a Nextflow channel. Possible formats are csv, json, yaml, or simply a yaml_blob.\nA csv should have column names which correspond to the different arguments of this pipeline.\nA json or a yaml file should be a list of maps, each of which has keys corresponding to the arguments of the pipeline.\nA yaml blob can also be passed directly as a parameter.\nInside the Nextflow pipeline code, params.params_list can also be used to directly a list of parameter sets.\nWhen passing a csv, json or yaml, relative path names are relativized to the location of the parameter file.",
            "hidden": true,
            
            "default": ""
          },
          "param_list_format": {
            "type":"string",
            "description": "Manually specify the param_list_format. Must be one of \u0027csv\u0027, \u0027json\u0027, \u0027yaml\u0027, \u0027yaml_blob\u0027, \u0027asis\u0027 or \u0027none\u0027.",
            "hidden": true,
            "enum": ["csv", "json", "yaml", "yaml_blob", "asis", "none"],
            "default": ""
          }
        }
      }
    },
    "allOf": [
      {
        "$ref": "#/definitions/inputs"
      },
      {
        "$ref": "#/definitions/outputs"
      },
      {
        "$ref": "#/definitions/arguments"
      },
      {
        "$ref": "#/definitions/nextflow input-output arguments"
      }
      
    ]
}
