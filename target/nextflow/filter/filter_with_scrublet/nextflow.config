  docker.enabled = true
  def viash_temp = System.getenv("VIASH_TEMP") ?: "/tmp/"
  docker.runOptions = "-i -v ${baseDir}:${baseDir} -v $viash_temp:$viash_temp"
  process.container = "dataintuitive/viash"
  params {
    filter_with_scrublet__input = "viash_no_value"
    filter_with_scrublet__modality = "rna"
    filter_with_scrublet__output = "no_default_value_configured"
    filter_with_scrublet__obs_name_filter = "filter_with_scrublet"
    filter_with_scrublet__do_subset = "no_default_value_configured"
    filter_with_scrublet__obs_name_doublet_score = "scrublet_doublet_score"
    filter_with_scrublet__min_counts = "2"
    filter_with_scrublet__min_cells = "3"
    filter_with_scrublet__min_gene_variablity_percent = "85.0"
    filter_with_scrublet__num_pca_components = "30"
    filter_with_scrublet__distance_metric = "euclidean"
    id = ""
    testScript = "run_test.py"
    testResources = [ "run_test.py", "../../../resources_test/pbmc_1k_protein_v3" ]
    filter_with_scrublet {
      name = "filter_with_scrublet"
      container = "filter_filter_with_scrublet"
      containerTag = "0.3.0"
      containerRegistry = "ghcr.io"
      containerOrganization = "openpipelines-bio"
      command = "filter_with_scrublet"
      tests {
        isDefined = true
        testScript = "run_test.py"
        testResources = [ "run_test.py", "../../../resources_test/pbmc_1k_protein_v3" ]
      }
      arguments {
        input {
          name = "input"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.filter_with_scrublet__input}"
          example = "input.h5mu"
          description = "Input h5mu file"
        }
        modality {
          name = "modality"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = true
          multiple_sep = ":"
          value = "${params.filter_with_scrublet__modality}"
          dflt = "rna"
        }
        output {
          name = "output"
          otype = "--"
          required = false
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.filter_with_scrublet__output}"
          example = "output.h5mu"
          description = "Output h5mu file."
        }
        obs_name_filter {
          name = "obs_name_filter"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.filter_with_scrublet__obs_name_filter}"
          dflt = "filter_with_scrublet"
          description = "In which .obs slot to store a boolean array corresponding to which observations should be filtered out."
        }
        do_subset {
          name = "do_subset"
          otype = "--"
          required = false
          type = "boolean_true"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.filter_with_scrublet__do_subset}"
          description = "Whether to subset before storing the output."
        }
        obs_name_doublet_score {
          name = "obs_name_doublet_score"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.filter_with_scrublet__obs_name_doublet_score}"
          dflt = "scrublet_doublet_score"
          description = "Name of the doublet scores column in the obs slot of the returned object."
        }
        min_counts {
          name = "min_counts"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.filter_with_scrublet__min_counts}"
          dflt = "2"
          description = "The number of minimal UMI counts per cell that have to be present for initial cell detection."
        }
        min_cells {
          name = "min_cells"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.filter_with_scrublet__min_cells}"
          dflt = "3"
          description = "The number of cells in which UMIs for a gene were detected."
        }
        min_gene_variablity_percent {
          name = "min_gene_variablity_percent"
          otype = "--"
          required = false
          type = "double"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.filter_with_scrublet__min_gene_variablity_percent}"
          dflt = "85.0"
          description = "Used for gene filtering prior to PCA. Keep the most highly variable genes (in the top min_gene_variability_pctl percentile), as measured by the v-statistic [Klein et al., Cell 2015]."
        }
        num_pca_components {
          name = "num_pca_components"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.filter_with_scrublet__num_pca_components}"
          dflt = "30"
          description = "Number of principal components to use during PCA dimensionality reduction."
        }
        distance_metric {
          name = "distance_metric"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.filter_with_scrublet__distance_metric}"
          dflt = "euclidean"
          description = "The distance metric used for computing similarities."
        }
      }
    }
  }