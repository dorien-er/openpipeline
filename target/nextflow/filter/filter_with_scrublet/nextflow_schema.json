{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "filter_with_scrublet",
    "description": "Doublet detection using the Scrublet method (Wolock, Lopez and Klein, 2019).\nThe method tests for potential doublets by using the expression profiles of\ncells to generate synthetic potential doubles which are tested against cells. \nThe method returns a \"doublet score\" on which it calls for potential doublets.\n\nFor the source code please visit https://github.com/AllonKleinLab/scrublet.\n\nFor 10x we expect the doublet rates to be:\n  Multiplet Rate (%) - # of Cells Loaded - # of Cells Recovered\n  ~0.4% ~800 ~500\n  ~0.8% ~1,600 ~1,000\n  ~1.6% ~3,200 ~2,000\n  ~2.3% ~4,800 ~3,000\n  ~3.1% ~6,400 ~4,000\n  ~3.9% ~8,000 ~5,000\n  ~4.6% ~9,600 ~6,000\n  ~5.4% ~11,200 ~7,000\n  ~6.1% ~12,800 ~8,000\n  ~6.9% ~14,400 ~9,000\n  ~7.6% ~16,000 ~10,000\n",
    "type": "object",
    "definitions": {
      "arguments" : {
        "title": "Arguments",
        "type": "object",
        "description": "No description",
        "default": "",
        "properties": {
          "input": {
            "type":"string",
            "description": "Input h5mu file",
            
            
            "default": ""
          },
          "modality": {
            "type":"string",
            "description": "No description",
            
            
            "default": "rna"
          },
          "output": {
            "type":"string",
            "description": "Output h5mu file.",
            
            
            "default": "$id.$key.output.h5mu"
          },
          "obs_name_filter": {
            "type":"string",
            "description": "In which .obs slot to store a boolean array corresponding to which observations should be filtered out.",
            
            
            "default": "filter_with_scrublet"
          },
          "do_subset": {
            "type":"boolean",
            "description": "Whether to subset before storing the output.",
            
            
            "default": "False"
          },
          "obs_name_doublet_score": {
            "type":"string",
            "description": "Name of the doublet scores column in the obs slot of the returned object.",
            
            
            "default": "scrublet_doublet_score"
          },
          "min_counts": {
            "type":"integer",
            "description": "The number of minimal UMI counts per cell that have to be present for initial cell detection.",
            
            
            "default": "2"
          },
          "min_cells": {
            "type":"integer",
            "description": "The number of cells in which UMIs for a gene were detected.",
            
            
            "default": "3"
          },
          "min_gene_variablity_percent": {
            "type":"number",
            "description": "Used for gene filtering prior to PCA. Keep the most highly variable genes (in the top min_gene_variability_pctl percentile), as measured by the v-statistic [Klein et al., Cell 2015].",
            
            
            "default": "85"
          },
          "num_pca_components": {
            "type":"integer",
            "description": "Number of principal components to use during PCA dimensionality reduction.",
            
            
            "default": "30"
          },
          "distance_metric": {
            "type":"string",
            "description": "The distance metric used for computing similarities.",
            
            
            "default": "euclidean"
          }
        }
      },
      "nextflow input-output arguments" : {
        "title": "Nextflow input-output arguments",
        "type": "object",
        "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
        "default": "",
        "properties": {
          "publish_dir": {
            "type":"string",
            "description": "Path to an output directory.",
            
            
            "default": ""
          },
          "param_list": {
            "type":"string",
            "description": "Allows inputting multiple parameter sets to initialise a Nextflow channel. Possible formats are csv, json, yaml, or simply a yaml_blob.\nA csv should have column names which correspond to the different arguments of this pipeline.\nA json or a yaml file should be a list of maps, each of which has keys corresponding to the arguments of the pipeline.\nA yaml blob can also be passed directly as a parameter.\nInside the Nextflow pipeline code, params.params_list can also be used to directly a list of parameter sets.\nWhen passing a csv, json or yaml, relative path names are relativized to the location of the parameter file.",
            "hidden": true,
            
            "default": ""
          },
          "param_list_format": {
            "type":"string",
            "description": "Manually specify the param_list_format. Must be one of \u0027csv\u0027, \u0027json\u0027, \u0027yaml\u0027, \u0027yaml_blob\u0027, \u0027asis\u0027 or \u0027none\u0027.",
            "hidden": true,
            "enum": ["csv", "json", "yaml", "yaml_blob", "asis", "none"],
            "default": ""
          }
        }
      }
    },
    "allOf": [
      {
        "$ref": "#/definitions/arguments"
      },
      {
        "$ref": "#/definitions/nextflow input-output arguments"
      }
      
    ]
}
