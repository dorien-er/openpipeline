  docker.enabled = true
  def viash_temp = System.getenv("VIASH_TEMP") ?: "/tmp/"
  docker.runOptions = "-i -v ${baseDir}:${baseDir} -v $viash_temp:$viash_temp"
  process.container = "dataintuitive/viash"
  params {
    cellranger_count__input = "no_default_value_configured"
    cellranger_count__id = "cr"
    cellranger_count__libraries = "no_default_value_configured"
    cellranger_count__feature_ref = "no_default_value_configured"
    cellranger_count__transcriptome = "viash_no_value"
    cellranger_count__output = "viash_no_value"
    cellranger_count__log = "log.txt"
    id = ""
    testScript = ""
    testResources = [  ]
    cellranger_count {
      name = "cellranger_count"
      container = "mapping_cellranger_count"
      containerTag = "main_build"
      containerRegistry = "ghcr.io"
      containerOrganization = "openpipeline"
      command = "cellranger_count"
      tests {
        isDefined = false
        testScript = "NA"
        testResources = [  ]
      }
      arguments {
        input {
          name = "input"
          otype = "--"
          required = false
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_count__input}"
          example = "fastq_dir"
          description = "Path of folder created by mkfastq or bcl2fastq"
        }
        id {
          name = "id"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_count__id}"
          dflt = "cr"
          description = "Output folder for the count files."
        }
        libraries {
          name = "libraries"
          otype = "--"
          required = false
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_count__libraries}"
          description = "File containing the library definitions"
        }
        feature_ref {
          name = "feature_ref"
          otype = "--"
          required = false
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_count__feature_ref}"
          description = "File containing the barcode info"
        }
        transcriptome {
          name = "transcriptome"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_count__transcriptome}"
          example = "reference_dir"
          description = "Path of folder containing 10x-compatible reference."
        }
        output {
          name = "output"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_count__output}"
          example = "output"
          description = "Path to cellranger output folder"
        }
        log {
          name = "log"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_count__log}"
          dflt = "log.txt"
          description = "Path to the log file (stdout and stderr)"
        }
      }
    }
  }