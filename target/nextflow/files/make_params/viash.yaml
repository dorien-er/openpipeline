functionality:
  name: "make_params"
  namespace: "files"
  version: "main_build"
  authors:
  - name: "Angela Pisco"
    roles:
    - "author"
    props:
      github: "aopisco"
      orcid: "0000-0003-0142-2355"
  - name: "Robrecht Cannoodt"
    email: "robrecht@data-intuitive.com"
    roles:
    - "maintainer"
    - "author"
    props:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  inputs: []
  outputs: []
  arguments:
  - type: "file"
    name: "--base_dir"
    alternatives: []
    description: "Base directory to search recursively"
    example:
    - "/path/to/dir"
    default: []
    must_exist: false
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--pattern"
    alternatives: []
    description: "An optional regular expression. Only file names which match the\
      \ regular expression will be matched."
    example:
    - "*.fastq.gz"
    default: []
    required: true
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_dirname_drop"
    alternatives: []
    description: "For every matched file, the parent directory will be traversed N\
      \ times."
    example: []
    default:
    - 0
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_basename_id"
    alternatives: []
    description: "The unique identifiers will consist of at least N dirnames."
    example: []
    default:
    - 0
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--id_name"
    alternatives: []
    description: "The name for storing the identifier field in the yaml."
    example: []
    default:
    - "id"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--path_name"
    alternatives: []
    description: "The name for storing the path field in the yaml."
    example: []
    default:
    - "path"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--group_name"
    alternatives: []
    description: "Top level name for the group of entries."
    example:
    - "param_list"
    default: []
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives: []
    description: "Output YAML file."
    example:
    - "params.yaml"
    default: []
    must_exist: false
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "r_script"
    path: "script.R"
    is_executable: true
  description: "Looks for files in a directory and turn it in a params file."
  test_resources: []
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms: []
info:
  config: "src/files/make_params/config.vsh.yaml"
  platform: "nextflow"
  output: "target/nextflow/files/make_params"
  viash_version: "0.6.3"
  git_commit: "fcb1bd2a0f76d2dd992272b45d76a89e8cf3e0d3"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
