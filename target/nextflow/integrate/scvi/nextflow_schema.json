{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "scvi",
    "description": "Performs scvi integration as done in the human lung cell atlas https://github.com/LungCellAtlas/HLCA",
    "type": "object",
    "definitions": {
      "inputs" : {
        "title": "Inputs",
        "type": "object",
        "description": "No description",
        "default": "",
        "properties": {"input": {
            "type":"string",
            "description": "Input h5mu file",
            
            "default": ""
          },"modality": {
            "type":"string",
            "description": "No description",
            
            "default": "rna"
          },"input_layer": {
            "type":"string",
            "description": "Input layer to use. If None, X is used",
            
            "default": ""
          },"obs_batch": {
            "type":"string",
            "description": "Column name discriminating between your batches.",
            
            "default": "sample_id"
          },"var_input": {
            "type":"string",
            "description": ".var column containing highly variable genes. By default, do not subset genes.",
            
            "default": ""
          }
        }
      },
      "outputs" : {
        "title": "Outputs",
        "type": "object",
        "description": "No description",
        "default": "",
        "properties": {"output": {
            "type":"string",
            "description": "Output h5mu file.",
            
            "default": "$id.$key.output.output"
          },"obsm_output": {
            "type":"string",
            "description": "In which .obsm slot to store the resulting integrated embedding.",
            
            "default": "X_scvi_integrated"
          }
        }
      },
      "early stopping arguments" : {
        "title": "Early stopping arguments",
        "type": "object",
        "description": "No description",
        "default": "",
        "properties": {"early_stopping": {
            "type":"boolean",
            "description": "Whether to perform early stopping with respect to the validation set.",
            
            "default": ""
          },"early_stopping_monitor": {
            "type":"string",
            "description": "Metric logged during validation set epoch.",
            "enum": ["elbo_validation", "reconstruction_loss_validation", "kl_local_validation"],
            "default": "elbo_validation"
          },"early_stopping_patience": {
            "type":"integer",
            "description": "Number of validation epochs with no improvement after which training will be stopped.",
            
            "default": "45"
          },"early_stopping_min_delta": {
            "type":"number",
            "description": "Minimum change in the monitored quantity to qualify as an improvement, i.e. an absolute change of less than min_delta, will count as no improvement.",
            
            "default": "0.0"
          }
        }
      },
      "learning parameters" : {
        "title": "Learning parameters",
        "type": "object",
        "description": "No description",
        "default": "",
        "properties": {"max_epochs": {
            "type":"integer",
            "description": "Number of passes through the dataset, defaults to (20000 / number of cells) * 400 or 400; whichever is smallest.",
            
            "default": ""
          },"reduce_lr_on_plateau": {
            "type":"boolean",
            "description": "Whether to monitor validation loss and reduce learning rate when validation set `lr_scheduler_metric` plateaus.",
            
            "default": "True"
          },"lr_factor": {
            "type":"number",
            "description": "Factor to reduce learning rate.",
            
            "default": "0.6"
          },"lr_patience": {
            "type":"number",
            "description": "Number of epochs with no improvement after which learning rate will be reduced.",
            
            "default": "30"
          }
        }
      },
      "nextflow input-output arguments" : {
        "title": "Nextflow input-output arguments",
        "type": "object",
        "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
        "default": "",
        "properties": {"publish_dir": {
            "type":"string",
            "description": "Path to an output directory.",
            
            "default": ""
          },"param_list": {
            "type":"string",
            "description": "Allows inputting multiple parameter sets to initialise a Nextflow channel. Possible formats are csv, json, yaml, or simply a yaml_blob.","help_text": "Allows inputting multiple parameter sets to initialise a Nextflow channel. Possible formats are csv, json, yaml, or simply a yaml_blob.\nA csv should have column names which correspond to the different arguments of this pipeline.\nA json or a yaml file should be a list of maps, each of which has keys corresponding to the arguments of the pipeline.\nA yaml blob can also be passed directly as a parameter.\nInside the Nextflow pipeline code, params.params_list can also be used to directly a list of parameter sets.\nWhen passing a csv, json or yaml, relative path names are relativized to the location of the parameter file.","hidden": true,
            
            "default": ""
          },"param_list_format": {
            "type":"string",
            "description": "Manually specify the param_list_format. Must be one of \u0027csv\u0027, \u0027json\u0027, \u0027yaml\u0027, \u0027yaml_blob\u0027, \u0027asis\u0027 or \u0027none\u0027.","hidden": true,
            "enum": ["csv", "json", "yaml", "yaml_blob", "asis", "none"],
            "default": ""
          }
        }
      }
    },
    "allOf": [
      {
        "$ref": "#/definitions/inputs"
      },
      {
        "$ref": "#/definitions/outputs"
      },
      {
        "$ref": "#/definitions/early stopping arguments"
      },
      {
        "$ref": "#/definitions/learning parameters"
      },
      {
        "$ref": "#/definitions/nextflow input-output arguments"
      }
      
    ]
}
