  docker.enabled = true
  def viash_temp = System.getenv("VIASH_TEMP") ?: "/tmp/"
  docker.runOptions = "-i -v ${baseDir}:${baseDir} -v $viash_temp:$viash_temp"
  process.container = "dataintuitive/viash"
  params {
    lognorm__input = "viash_no_value"
    lognorm__output = "viash_no_value"
    lognorm__modality = "rna"
    lognorm__normalized_umi_count = "10000"
    lognorm__regress_out_variables = "no_default_value_configured"
    id = ""
    testScript = "run_test.py"
    testResources = [ "run_test.py", "../../../resources_test/pbmc_1k_protein_v3" ]
    lognorm {
      name = "lognorm"
      container = "normalize_lognorm"
      containerTag = "0.3.0rc1"
      containerRegistry = "ghcr.io"
      containerOrganization = "openpipelines-bio"
      command = "lognorm"
      tests {
        isDefined = true
        testScript = "run_test.py"
        testResources = [ "run_test.py", "../../../resources_test/pbmc_1k_protein_v3" ]
      }
      arguments {
        input {
          name = "input"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.lognorm__input}"
          example = "input.h5mu"
          description = "Input h5mu file"
        }
        output {
          name = "output"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.lognorm__output}"
          example = "output.h5mu"
          description = "Output h5mu file."
        }
        modality {
          name = "modality"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = true
          multiple_sep = ":"
          value = "${params.lognorm__modality}"
          dflt = "rna"
          description = "Which modality (one or more) to run this component on."
        }
        normalized_umi_count {
          name = "normalized_umi_count"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.lognorm__normalized_umi_count}"
          dflt = "10000"
        }
        regress_out_variables {
          name = "regress_out_variables"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = true
          multiple_sep = ":"
          value = "${params.lognorm__regress_out_variables}"
          description = "Which .obs keys to regress out."
        }
      }
    }
  }