  docker.enabled = true
  def viash_temp = System.getenv("VIASH_TEMP") ?: "/tmp/"
  docker.runOptions = "-i -v ${baseDir}:${baseDir} -v $viash_temp:$viash_temp"
  process.container = "dataintuitive/viash"
  params {
    cellranger_mkfastq__input = "no_default_value_configured"
    cellranger_mkfastq__samplesheet = "no_default_value_configured"
    cellranger_mkfastq__output = "viash_no_value"
    cellranger_mkfastq__barcode_mismatches = "1"
    cellranger_mkfastq__memory = "128"
    cellranger_mkfastq__cores = "32"
    id = ""
    testScript = "run_test.sh"
    testResources = [ "run_test.sh", "../../../resources_test/cellranger_tiny_bcl_1.2.0" ]
    cellranger_mkfastq {
      name = "cellranger_mkfastq"
      container = "bcl_demux_cellranger_mkfastq"
      containerTag = "main_build"
      containerRegistry = "ghcr.io"
      containerOrganization = "openpipeline"
      command = "cellranger_mkfastq"
      tests {
        isDefined = true
        testScript = "run_test.sh"
        testResources = [ "run_test.sh", "../../../resources_test/cellranger_tiny_bcl_1.2.0" ]
      }
      arguments {
        input {
          name = "input"
          otype = "--"
          required = false
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_mkfastq__input}"
          description = "Path of Illumina BCL run tar.gz or folder."
        }
        samplesheet {
          name = "samplesheet"
          otype = "--"
          required = false
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_mkfastq__samplesheet}"
          description = "Path to the sample sheet. The sample sheet can either be a simple CSV with lane, sample and index columns, or an Illumina Experiment Manager-compatible sample sheet. Sample sheet indexes can refer to 10x sample index set names (e.g., SI-GA-A12)."
        }
        output {
          name = "output"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_mkfastq__output}"
          description = "The output folder generated by cellranger mkfastq"
        }
        barcode_mismatches {
          name = "barcode_mismatches"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_mkfastq__barcode_mismatches}"
          dflt = "1"
          description = "Number of allowed mismatches per index. Multiple, comma delimited, entries allowed. Each entry is applied to the corresponding index; last entry applies to all remaining indices. Accepted values: 0, 1, 2."
        }
        memory {
          name = "memory"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_mkfastq__memory}"
          dflt = "128"
          description = "Set max GB the pipeline may request at one time. Only applies to local jobs. Default=128. Set to '0' to use the default cellranger behaviour."
        }
        cores {
          name = "cores"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.cellranger_mkfastq__cores}"
          dflt = "32"
          description = "Set max cores the pipeline may request at one time. Only applies to local jobs. Default=32. Set to '0' to use the default cellranger behaviour."
        }
      }
    }
  }