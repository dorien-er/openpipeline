  docker.enabled = true
  docker.runOptions = "-i -v ${baseDir}:${baseDir}"
  process.container = "dataintuitive/viash"
  params {
    convert_10x_to_h5ad__input = "viash_no_value"
    convert_10x_to_h5ad__output = "output.h5ad"
    convert_10x_to_h5ad__compression = "gzip"
    id = ""
    testScript = "run_test.py"
    testResources = [ "run_test.py", "../../../resources/test/pbmc_1k_protein_v3/pbmc_1k_protein_v3_raw_feature_bc_matrix.h5" ]
    convert_10x_to_h5ad {
      name = "convert_10x_to_h5ad"
      container = "convert_convert_10x_to_h5ad"
      containerTag = "main_build"
      containerRegistry = "openpipeline"
      command = "convert_10x_to_h5ad"
      tests {
        isDefined = true
        testScript = "run_test.py"
        testResources = [ "run_test.py", "../../../resources/test/pbmc_1k_protein_v3/pbmc_1k_protein_v3_raw_feature_bc_matrix.h5" ]
      }
      arguments {
        input {
          name = "input"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.convert_10x_to_h5ad__input}"
          dflt = "input.h5"
          description = "Input h5 file"
        }
        output {
          name = "output"
          otype = "--"
          required = false
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.convert_10x_to_h5ad__output}"
          dflt = "output.h5ad"
          description = "Output h5ad file."
        }
        compression {
          name = "compression"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.convert_10x_to_h5ad__compression}"
          dflt = "gzip"
          description = "The compression format to be used on the final h5ad object."
        }
      }
    }
  }