  docker.enabled = true
  def viash_temp = System.getenv("VIASH_TEMP") ?: "/tmp/"
  docker.runOptions = "-i -v ${baseDir}:${baseDir} -v $viash_temp:$viash_temp"
  process.container = "dataintuitive/viash"
  params {
    from_h5ad_to_h5mu__input = "viash_no_value"
    from_h5ad_to_h5mu__modality = "rna"
    from_h5ad_to_h5mu__output = "output.h5mu"
    id = ""
    testScript = "run_test.py"
    testResources = [ "run_test.py", "../../../resources_test/pbmc_1k_protein_v3" ]
    from_h5ad_to_h5mu {
      name = "from_h5ad_to_h5mu"
      container = "convert_from_h5ad_to_h5mu"
      containerTag = "main_build"
      containerRegistry = "ghcr.io"
      containerOrganization = "openpipelines-bio"
      command = "from_h5ad_to_h5mu"
      tests {
        isDefined = true
        testScript = "run_test.py"
        testResources = [ "run_test.py", "../../../resources_test/pbmc_1k_protein_v3" ]
      }
      arguments {
        input {
          name = "input"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = true
          multiple_sep = ":"
          value = "${params.from_h5ad_to_h5mu__input}"
          dflt = "input.h5ad"
          description = "Input h5ad files"
        }
        modality {
          name = "modality"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = true
          multiple_sep = ":"
          value = "${params.from_h5ad_to_h5mu__modality}"
          dflt = "rna"
        }
        output {
          name = "output"
          otype = "--"
          required = false
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.from_h5ad_to_h5mu__output}"
          dflt = "output.h5mu"
          description = "Output muon file."
        }
      }
    }
  }