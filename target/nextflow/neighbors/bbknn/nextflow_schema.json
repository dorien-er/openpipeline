{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "bbknn",
    "description": "BBKNN network generation\n",
    "type": "object",
    "definitions": {
      "arguments" : {
        "title": "Arguments",
        "type": "object",
        "description": "No description",
        "default": "",
        "properties": {"input": {
            "type":"string",
            "description": "Input h5mu file",
            
            "default": ""
          },"modality": {
            "type":"string",
            "description": "No description",
            
            "default": "rna"
          },"obsm_input": {
            "type":"string",
            "description": "The dimensionality reduction in `.obsm` to use for neighbour detection. Defaults to X_pca.",
            
            "default": "X_pca"
          },"obs_batch": {
            "type":"string",
            "description": ".obs column name discriminating between your batches.",
            
            "default": "batch"
          },"output": {
            "type":"string",
            "description": "Output .h5mu file.",
            
            "default": "$id.$key.output.output"
          },"uns_output": {
            "type":"string",
            "description": "Mandatory .uns slot to store various neighbor output objects.",
            
            "default": "neighbors"
          },"obsp_distances": {
            "type":"string",
            "description": "In which .obsp slot to store the distance matrix between the resulting neighbors.",
            
            "default": "distances"
          },"obsp_connectivities": {
            "type":"string",
            "description": "In which .obsp slot to store the connectivities matrix between the resulting neighbors.",
            
            "default": "connectivities"
          },"n_neighbors_within_batch": {
            "type":"integer",
            "description": "How many top neighbours to report for each batch; total number of neighbours in the initial k-nearest-neighbours computation will be this number times the number of batches.",
            
            "default": "3"
          },"n_pcs": {
            "type":"integer",
            "description": "How many dimensions (in case of PCA, principal components) to use in the analysis.",
            
            "default": "50"
          },"n_trim": {
            "type":"integer",
            "description": "Trim the neighbours of each cell to these many top connectivities. May help with population independence and improve the tidiness of clustering. The lower the value the more independent the individual populations, at the cost of more conserved batch effect. If `None` (default), sets the parameter value automatically to 10 times `neighbors_within_batch` times the number of batches. Set to 0 to skip.",
            
            "default": ""
          }
        }
      },
      "nextflow input-output arguments" : {
        "title": "Nextflow input-output arguments",
        "type": "object",
        "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
        "default": "",
        "properties": {"publish_dir": {
            "type":"string",
            "description": "Path to an output directory.",
            
            "default": ""
          },"param_list": {
            "type":"string",
            "description": "Allows inputting multiple parameter sets to initialise a Nextflow channel. Possible formats are csv, json, yaml, or simply a yaml_blob.","help_text": "Allows inputting multiple parameter sets to initialise a Nextflow channel. Possible formats are csv, json, yaml, or simply a yaml_blob.\nA csv should have column names which correspond to the different arguments of this pipeline.\nA json or a yaml file should be a list of maps, each of which has keys corresponding to the arguments of the pipeline.\nA yaml blob can also be passed directly as a parameter.\nInside the Nextflow pipeline code, params.params_list can also be used to directly a list of parameter sets.\nWhen passing a csv, json or yaml, relative path names are relativized to the location of the parameter file.","hidden": true,
            
            "default": ""
          },"param_list_format": {
            "type":"string",
            "description": "Manually specify the param_list_format. Must be one of \u0027csv\u0027, \u0027json\u0027, \u0027yaml\u0027, \u0027yaml_blob\u0027, \u0027asis\u0027 or \u0027none\u0027.","hidden": true,
            "enum": ["csv", "json", "yaml", "yaml_blob", "asis", "none"],
            "default": ""
          }
        }
      }
    },
    "allOf": [
      {
        "$ref": "#/definitions/arguments"
      },
      {
        "$ref": "#/definitions/nextflow input-output arguments"
      }
      
    ]
}
